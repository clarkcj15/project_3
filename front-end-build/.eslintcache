[{"/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/UserDogForm.js":"1","/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/Components/userdogs/UserDogs.js":"2","/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/Components/Dogs/Dogs.js":"3","/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/App.js":"4","/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/Components/Home/Home.js":"5","/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/DogRateForm.js":"6","/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/reportWebVitals.js":"7","/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/index.js":"8"},{"size":2746,"mtime":1609985871350,"results":"9","hashOfConfig":"10"},{"size":1946,"mtime":1609987148725,"results":"11","hashOfConfig":"10"},{"size":2650,"mtime":1609987126481,"results":"12","hashOfConfig":"10"},{"size":844,"mtime":1609454220134,"results":"13","hashOfConfig":"10"},{"size":776,"mtime":1609962578809,"results":"14","hashOfConfig":"10"},{"size":2872,"mtime":1609987276789,"results":"15","hashOfConfig":"10"},{"size":362,"mtime":1609120287317,"results":"16","hashOfConfig":"10"},{"size":628,"mtime":1609893855090,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"ge2ag2",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/UserDogForm.js",["42","43","44"],"import { useRef, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n\nexport default ({userDogs, fetchUserDogs}) => {\n    const imageInputRef = useRef(null);\n    const breedInputRef = useRef(null);\n    const rateInputRef = useRef(null);\n    const descriptionInputRef = useRef(null);\n\n    const createUserDog = async (event) => {\n        event.preventDefault()\n        const image = imageInputRef.current.value;\n        const breed = breedInputRef.current.value;\n        const rate = rateInputRef.current.value;\n        const description = descriptionInputRef.current.value;\n        const body = JSON.stringify({\n            image, breed, rate, description\n        });\n        event.currentTarget.reset();\n        try {\n            await fetch('https://dog-rate-app.herokuapp.com/api/doggos', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: body\n            })\n            fetchUserDogs()\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    return(\n        <Form onSubmit={createUserDog}>\n        <Form.Row className=\"align-items-center\">\n        <Col xs=\"auto\">\n            <Form.Group class=\"user-d-form\">\n\n            <Form.Label>Image URL:</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Input Image URL\" ref={imageInputRef} />\n             <br/>\n\n            <Form.Label>Breed:</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Input Dog Breed\" ref={breedInputRef}/>\n             <br/>\n\n            <Form.Label>Rate:</Form.Label>\n            <Form.Control type=\"number\" placeholder=\"Rate Your Dog\" ref={rateInputRef}/> /10\n             <br/>\n\n            <Form.Label>Description:</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Describe Your Dog\" ref={descriptionInputRef}/>\n            <Button type=\"submit\">Rate Your Dog</Button>{' '}\n            </Form.Group> <br/>\n            </Col>\n            </Form.Row>\n        </Form>\n    )\n}\n{/* <form onSubition={createUserDog}>\n<Form.Group controlId=\"image\">\n    <Form.Label>Image</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Input Image URL\" />\n  </Form.Group>\n</form>\n\n<Button type=\"submit\">Rate Your Dog</Button>{' '}\n\nImage: <input className=\"form\" type=\"text\" name=\"image\" ref={imageInput}/> \nBreed: <input className=\"form\" type=\"text\" name=\"breed\" ref={breedInput}/> <br/>\nRate: <input className=\"form\" type=\"number\" name=\"rate\" ref={rateInput}/> /10 <br/>\nDescription: <input className=\"form\" type=\"text\" name=\"description\" ref={descriptionInput}/>\n<input type=\"submit\" value=\"Rate Your Dog\"/>\n*/}","/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/Components/userdogs/UserDogs.js",[],["45","46"],"/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/Components/Dogs/Dogs.js",["47","48"],"import React from 'react';\nimport {useEffect, useState} from 'react';\nimport DogRateForm from '../../DogRateForm';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/esm/Card';\n\n\nconst Dogs = () => {\n    const [doggo, showDog] = useState([]);\n    const [ratedDoggo, showList] = useState([]);\n    const dogURL = \"https://dog.ceo/api/breeds/image/random\";  \n    const ratedURL = \"https://dog-rate-app.herokuapp.com/api/ratedogs\";  \n    const getDoggo = async () => {\n        try{\n        const response = await fetch(dogURL);\n        const data = await response.json();\n        console.log(data);\n        showDog(data);\n        getRatedDoggo();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    useEffect(() => {\n        getDoggo();\n        getRatedDoggo();\n    }, []);\n    \n    const getRatedDoggo = async () => {\n        try{\n            const response = await fetch(ratedURL);\n            const data = await response.json();\n            console.log(data);\n            showList(data);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return(\n        <div className=\"d\">\n            <header className=\"head\">\n            <h1>Rate Our Dogs!</h1>\n            </header>\n            \n            <Card style={{width: '20rem'}}><Card.Img className=\"i\" src={doggo.message} height=\"200px\" width=\"250\"/></Card>\n            \n            <DogRateForm getDoggo={getDoggo} ratedDoggo={ratedDoggo} doggo={doggo}/>\n            <ul className=\"dog-list\">\n                {\n                    ratedDoggo.map(ratedDoggo => {\n                        return(\n                            <li>\n                            \n                                <Card style={{width: '20rem'}} className=\"text-center\">\n                                    <Card.Img variant=\"top\" style={{width: '20rem'}} src={ratedDoggo.image}/>\n                                    <Card.Body>\n                                        <ListGroup horizontal>\n                                            <ListGroup.Item style={{width: '10rem'}} > {ratedDoggo.rate} /10 </ListGroup.Item>\n                                            <ListGroup.Item style={{width: '10rem'}} > {ratedDoggo.description} </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card.Body>    \n                                </Card>\n\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\nexport default Dogs;\n\n\n{/* <img src={ratedDoggo.image} height=\"200px\" width=\"200px\" alt=\"\"/> <br/> */}",["49","50"],"/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/App.js",["51","52"],"import './App.css';\nimport {Route, Link, Switch} from 'react-router-dom';\nimport { useEffect, useState} from 'react'\nimport Home from './Components/Home/Home'\nimport Dogs from './Components/Dogs/Dogs';\nimport UserDogs from './Components/userdogs/UserDogs';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* <h1>Tinder Meets WeRateDogs Meets Instagram</h1> */}\n      <nav className=\"nav\">\n        <Link to=\"/doggos\"><h3>Home</h3></Link>\n        <Link to=\"/ratedogs\"> <h3>Rate Our Dogs </h3></Link>\n        <Link to=\"/userdogs\"><h3>Rate Your Own Dog!</h3></Link>\n      </nav>\n      <Switch className=\"switch\">\n      <Route exact path=\"/doggos\" component={Home} />\n      <Route path=\"/ratedogs\" component={Dogs}/>\n      <Route path=\"/userdogs\" component={UserDogs} />\n      </Switch>\n      \n\n    </div>\n  );\n}\n\nexport default App;",["53","54"],"/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/Components/Home/Home.js",[],["55","56"],"/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/DogRateForm.js",["57","58"],"import { useRef, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\n\nexport default ({ratedDoggo, getDoggo, doggo}) => {\n    const dogRateInputRef = useRef(null);\n    const dogDescriptionInputRef = useRef(null);\n\n    const createRating = async (event) => {\n        event.preventDefault();\n        const dogRate = dogRateInputRef.current.value;\n        const dogDescription = dogDescriptionInputRef.current.value;\n        const body = JSON.stringify({\n            rate:dogRate, description:dogDescription, image:doggo.message\n        });\n        event.currentTarget.reset();\n        console.log(body);\n        try{\n            await fetch('https://dog-rate-app.herokuapp.com/api/ratedogs', {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: body\n            })\n            getDoggo()\n            // getRatedDoggo()\n        } catch(error){\n            console.error(error)\n        }\n    }\n    // const getRatedDoggo = async (event) => {\n    //     event.preventDefault();\n    //     const dogRate = dogRateInput.current.value;\n    //     const dogDescription = dogDescriptionInput.current.value;\n    //     const body = JSON.stringify({\n    //         rate:dogRate, description:dogDescription, image:doggo.message\n    //     });\n    //     event.currentTarget.reset();\n    //     try{\n    //         await fetch('http://localhost:3000/ratedogs', {\n    //             method: 'GET',\n    //             headers: {\n    //                 'Conent-type': 'application/json'\n    //             },\n    //             body: body\n    //         })\n    //         getRatedDoggo()\n    //     } catch(error){\n    //         console.error(error)\n    //     }\n    // }\n\n    \n    return(\n        <Form onSubmit={createRating}>\n            <Form.Row className=\"align-items-center\">\n                <Col xs=\"auto\">\n                    <Form.Group>\n                        <Form.Label>Dog Rate</Form.Label>\n                        <Form.Control type=\"number\" placeholder=\"Rate This Dog\" ref={dogRateInputRef}/> /10\n                        <br/>\n                        <Form.Label>Describe This Dog</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Describe This Dog\" ref={dogDescriptionInputRef}/>\n                        <br/>\n                        <Button type=\"submit\"> Rate This Dog</Button>{' '}\n                    </Form.Group>\n                </Col>\n            </Form.Row>\n        </Form>\n    )\n\n}\n\n// Rate:<input className=\"fi\" type=\"number\" name=\"dogRate\" ref={dogRateInput}/> /10 <br/>\n// Describe this dog: <input className=\"fi\" type=\"text\" name=\"dogDescription\" ref={dogDescriptionInput}/> <br/>\n// <input type=\"submit\" value=\"Rate This Dog\"/>","/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/reportWebVitals.js",[],"/Users/cjclark/SEIR/Projects/project_3/front-end-build/src/index.js",[],{"ruleId":"59","severity":1,"message":"60","line":1,"column":18,"nodeType":"61","messageId":"62","endLine":1,"endColumn":27},{"ruleId":"63","severity":1,"message":"64","line":6,"column":1,"nodeType":"65","endLine":61,"endColumn":2},{"ruleId":"66","severity":1,"message":"67","line":62,"column":1,"nodeType":"68","messageId":"69","endLine":76,"endColumn":4},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":27,"column":8,"nodeType":"76","endLine":27,"endColumn":10,"suggestions":"77"},{"ruleId":"66","severity":1,"message":"67","line":76,"column":1,"nodeType":"68","messageId":"69","endLine":76,"endColumn":80},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":19},{"ruleId":"59","severity":1,"message":"80","line":3,"column":21,"nodeType":"61","messageId":"62","endLine":3,"endColumn":29},{"ruleId":"70","replacedBy":"81"},{"ruleId":"72","replacedBy":"82"},{"ruleId":"70","replacedBy":"83"},{"ruleId":"72","replacedBy":"84"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":18,"nodeType":"61","messageId":"62","endLine":1,"endColumn":27},{"ruleId":"63","severity":1,"message":"64","line":6,"column":1,"nodeType":"65","endLine":74,"endColumn":2},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDoggo'. Either include it or remove the dependency array.","ArrayExpression",["87"],["85"],["86"],"'useState' is defined but never used.",["85"],["86"],["85"],["86"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [getDoggo]",{"range":"90","text":"91"},[825,827],"[getDoggo]"]